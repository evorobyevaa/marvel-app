{"version":3,"file":"static/js/637.9ac45128.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMsg/ErrorMsg.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","services/MarvelServece.js","hooks/http.hook.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n  return (\n    <div className=\"app__banner\">\n      <img src={avengers} alt=\"Avengers\"/>\n      <div className=\"app__banner-text\">\n        New comics every week!<br/>\n        Stay tuned!\n      </div>\n      <img src={avengersLogo} alt=\"Avengers logo\"/>\n    </div>\n  )\n}\n\nexport default AppBanner;","import img from './error.gif';\r\n\r\nconst ErrorMsg = () => {\r\n  return (\r\n    <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt=\"error img\"/>\r\n  )\r\n}\r\n\r\nexport default ErrorMsg;","import { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelServece';\nimport { Link } from 'react-router-dom';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMsg from '../errorMsg/ErrorMsg';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const {loading, error, getAllComics} = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllComics(offset)\n    .then(onComicsListLoaded)\n  }\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList([...comicsList, ...newComicsList]);\n    setNewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  }\n\n  function renderItems (arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link to={`/marvel-app/comics/${item.id}`}>\n            <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      )\n    })\n\n    return (\n        <ul className=\"comics__grid\">\n            {items}\n        </ul>\n    )\n  }\n\n  const items = renderItems(comicsList);\n  const errorMessage = error ? <ErrorMsg/> : null;\n  const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n  return (\n    <div className=\"comics__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button \n        className=\"btn btn__long\"\n        disabled={newItemLoading}\n        style={{'display': comicsEnded ? 'none' : 'block'}}\n        onClick={() => onRequest(offset)}>\n        <div className=\"inner\">LOAD MORE</div> \n      </button>\n    </div>\n  )\n}\n\nexport default ComicsList;","import { Helmet } from 'react-helmet';\r\n\r\nimport AppBanner from '../appBanner/AppBanner';\r\nimport ComicsList from '../comicsList/ComicsList';\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Page with list of our comics\"/>\r\n        <title>Comics page</title>\r\n      </Helmet>\r\n      <AppBanner/>\r\n      <ComicsList/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ComicsPage;","import {useHttp} from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n  const {loading, error, request, clearError} = useHttp();\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = 'apikey=3f1bbb88ac40ae60022fb40c97324675';\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(`${_apiBase}/characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  }\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  }\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  }\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(`${_apiBase}/comics?limit=8&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformComics);\r\n  }\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}/comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  }\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name : char.name,\r\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items\r\n    }\r\n  }\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title : comics.title,\r\n      description: comics.description || 'There is no description for this comics',\r\n      pageCount: comics.pageCount ? `${comics.pageCount} pages` : 'No information about the number of pages',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      language: comics.textObjects.language || 'en-us',\r\n      price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available'\r\n    }\r\n  }\r\n\r\n  return {loading, error, clearError, getAllCharacters, getCharacter, getCharacterByName, getAllComics, getComic};\r\n}\r\n\r\nexport default useMarvelService;","import { useCallback, useState } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type' : 'application/json'}) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(url, {method, body, headers});\r\n\r\n      if(!response.ok) {\r\n        throw new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      setLoading(false);\r\n      return data;\r\n    } catch(e) {\r\n      setLoading(false);\r\n      setError(e.message);\r\n      throw e;\r\n    }\r\n  }, [])\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n  return {loading, error, request, clearError}\r\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["className","src","avengers","alt","avengersLogo","style","display","width","height","objectFit","margin","img","useState","comicsList","setComicsList","newItemLoading","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","items","arr","map","item","i","to","id","thumbnail","title","price","renderItems","errorMessage","ErrorMsg","spinner","Spinner","disabled","onClick","Helmet","name","content","AppBanner","setLoading","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","res","results","_transformCharacter","getCharacterByName","getCharacter","_transformComics","getComic","char","description","slice","path","extension","homepage","urls","wiki","comics","pageCount","language","textObjects","prices","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}